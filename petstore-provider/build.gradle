plugins {
  id 'org.jetbrains.kotlin.jvm'
  id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
  id 'org.springframework.boot' version '2.1.6.RELEASE'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

apply plugin: "au.com.dius.pact"

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

dependencies {
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.18.3'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.9'
  implementation 'org.springdoc:springdoc-openapi-ui:1.1.25'
  implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'
  implementation 'io.github.microutils:kotlin-logging:1.7.6'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.junit.jupiter:junit-jupiter:5.12.0'
  testCompile 'au.com.dius:pact-jvm-provider-oas:4.0.0-beta.7'
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

bootJar {
//  baseName = 'petstore-provider'
//  version =  '0.0.0'
}

test {
  useJUnitPlatform()

  testLogging {
    events("passed", "skipped", "failed")
  }
}

pact {

  publish {
    pactBrokerUrl = 'https://rontest.pact.dius.com.au'
    pactBrokerToken = System.getenv('PACTFLOW_BROKER_TOKEN')
    pactDirectory = file("${project.projectDir}/src/main/resources")
    include = '.*oas.yaml'
  }

}
